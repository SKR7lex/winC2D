<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Msg.ScanSoftwareFailedFmt" xml:space="preserve">
    <value>扫描软件失败：{0}</value>
  </data>
  <data name="Title.Tip" xml:space="preserve">
    <value>提示</value>
  </data>
  <data name="Title.Error" xml:space="preserve">
    <value>错误</value>
  </data>
  <data name="Msg.MigrateFailedFmt" xml:space="preserve">
    <value>迁移失败：{0}
{1}</value>
  </data>
  <data name="Msg.MigrateCompleted" xml:space="preserve">
    <value>迁移完成！成功：{0}，失败：{1}</value>
  </data>
  <data name="Msg.SelectSoftware" xml:space="preserve">
    <value>请选择要迁移的软件。</value>
  </data>
  <data name="Desc.TargetFolderForSoftware" xml:space="preserve">
    <value>选择目标文件夹（例如：D:\Program Files）</value>
  </data>
  <data name="Title.MainWindow" xml:space="preserve">
    <value>winC2D</value>
  </data>
  <data name="Menu.Log" xml:space="preserve">
    <value>迁移日志</value>
  </data>
  <data name="Menu.Language" xml:space="preserve">
    <value>语言</value>
  </data>
  <data name="Tab.SoftwareMigration" xml:space="preserve">
    <value>软件迁移</value>
  </data>
  <data name="Tab.AppData" xml:space="preserve">
    <value>AppData</value>
  </data>
  <data name="Msg.SelectAppData" xml:space="preserve">
    <value>请选择要迁移的 AppData 文件夹。</value>
  </data>
  <data name="Desc.TargetFolderForAppData" xml:space="preserve">
    <value>选择目标文件夹（使用 mklink 符号链接）</value>
  </data>
  <data name="Msg.MklinkNote" xml:space="preserve">
    <value>ℹ 注意：此操作使用 mklink 创建符号链接。</value>
  </data>
  <data name="Button.RefreshAppData" xml:space="preserve">
    <value>刷新列表</value>
  </data>
  <data name="Settings.Title" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="Settings.ProgramFilesPath" xml:space="preserve">
    <value>默认程序文件位置（64 位）：</value>
  </data>
  <data name="Settings.ProgramFilesPathX86" xml:space="preserve">
    <value>默认程序文件位置（32 位）：</value>
  </data>
  <data name="Settings.CustomX86Path" xml:space="preserve">
    <value>自定义 32 位程序路径</value>
  </data>
  <data name="Button.Browse" xml:space="preserve">
    <value>浏览</value>
  </data>
  <data name="Button.Apply" xml:space="preserve">
    <value>应用</value>
  </data>
  <data name="Button.Reset" xml:space="preserve">
    <value>恢复默认</value>
  </data>
  <data name="Msg.InvalidPath" xml:space="preserve">
    <value>请输入有效的文件夹路径。</value>
  </data>
  <data name="Msg.SettingsApplied" xml:space="preserve">
    <value>设置应用成功！</value>
  </data>
  <data name="Msg.SettingsFailed" xml:space="preserve">
    <value>应用设置失败：{0}</value>
  </data>
  <data name="Msg.SelectFolder" xml:space="preserve">
    <value>选择默认 Program Files 位置</value>
  </data>
  <data name="Msg.ResetConfirm" xml:space="preserve">
    <value>确定要重置为默认位置（C:\Program Files）吗？</value>
  </data>
  <data name="Settings.ProgramFilesSection" xml:space="preserve">
    <value>程序文件位置（传统桌面程序）</value>
  </data>
  <data name="Settings.ProgramFilesNote" xml:space="preserve">
    <value>ℹ 此设置影响通过安装程序（.exe、.msi）安装的传统桌面程序。大多数第三方软件使用此位置。</value>
  </data>
  <data name="Settings.StoragePolicySection" xml:space="preserve">
    <value>新内容保存位置（Microsoft Store 应用和用户内容）</value>
  </data>
  <data name="Settings.StoragePolicyNote" xml:space="preserve">
    <value>ℹ 此设置影响 Microsoft Store 应用和新用户内容（文档、照片等）。需要 Windows 10 或更高版本。</value>
  </data>
  <data name="Button.OpenWindowsStorage" xml:space="preserve">
    <value>打开 Windows 设置</value>
  </data>
  <data name="GroupBox.SystemSettings" xml:space="preserve">
    <value>系统设置</value>
  </data>
  <data name="Log.Title" xml:space="preserve">
    <value>迁移日志</value>
  </data>
  <data name="Log.Time" xml:space="preserve">
    <value>时间</value>
  </data>
  <data name="Log.SoftwareName" xml:space="preserve">
    <value>软件名称</value>
  </data>
  <data name="Log.OldPath" xml:space="preserve">
    <value>原路径</value>
  </data>
  <data name="Log.NewPath" xml:space="preserve">
    <value>新路径</value>
  </data>
  <data name="Log.Status" xml:space="preserve">
    <value>状态</value>
  </data>
  <data name="Log.Message" xml:space="preserve">
    <value>消息</value>
  </data>
  <data name="Button.Rollback" xml:space="preserve">
    <value>回滚所选</value>
  </data>
  <data name="Msg.SelectLogEntry" xml:space="preserve">
    <value>请选择要回滚的迁移日志条目。</value>
  </data>
  <data name="Msg.NewPathNotExist" xml:space="preserve">
    <value>新路径不存在，无法回滚。</value>
  </data>
  <data name="Msg.OldPathExists" xml:space="preserve">
    <value>原路径已存在，无法回滚。</value>
  </data>
  <data name="Msg.RollbackSuccess" xml:space="preserve">
    <value>回滚成功！</value>
  </data>
  <data name="Msg.RollbackFailedFmt" xml:space="preserve">
    <value>回滚失败：{0}</value>
  </data>
  <data name="Msg.Loading" xml:space="preserve">
    <value>加载中...</value>
  </data>
  <data name="Column.SoftwareName" xml:space="preserve">
    <value>软件名称</value>
  </data>
  <data name="Column.InstallPath" xml:space="preserve">
    <value>安装路径</value>
  </data>
  <data name="Column.Size" xml:space="preserve">
    <value>大小</value>
  </data>
  <data name="Button.MigrateSelected" xml:space="preserve">
    <value>迁移所选</value>
  </data>
</root>